from src.package.model.model import load_model, get_text
import pytest


@pytest.fixture(name='model')
def fixture_model():
    return load_model()


@pytest.fixture(name='text')
def fixture_model():
    return (
        "Актуальность проблемы. Электронная информация играет все большую роль "
        "во всех сферах жизни современного общества. В последние годы объем "
        "научно-технической текстовой информации в электронном виде возрос "
        "настолько, что возникает угроза обесценивания этой информации в связи "
        "с трудностями поиска необходимых сведений среди множества доступных "
        "текстов. Развитие информационных ресурсов Интернет многократно "
        "усугубило проблему информационной перегрузки. В этой ситуации "
        "особенно актуальными становятся методы автоматизации реферирования "
        "текстовой информации, то есть методы получения сжатого представления "
        "текстовых документов–рефератов (аннотаций). Постановка проблемы "
        "автоматического реферирования текста и соответственно попытки ее "
        "решения с использованием различных подходов предпринимались многими "
        "исследователями. История применения вычислительной техники для "
        "реферирования насчитывает уже более 50 лет и связана с именами таких "
        "исследователей, как Г.П. Лун, В.Е. Берзон, И.П. Cевбо, "
        "Э.Ф. Скороходько, Д.Г. Лахути, Р.Г. Пиотровский и др. За эти годы "
        "выработаны многочисленные подходы к решению данной проблемы, которые "
        "достаточно четко подразделяются на два направления: автоматическое "
        "реферирование, основанное на экстрагировании из первичных документов "
        "с помощью определенных формальных признаков «наиболее информативных» "
        "фраз (фрагментов), совокупность которых образует некоторый экстракт; "
        "автоматическое реферирование, основанное на выделении из текстов с "
        "помощью специальных информационных языков наиболее существенной "
        "информации и порождении новых текстов (рефератов), содержательно "
        "обобщающих первичные документы."
    )


def test__load_model(model):
    assert not model


def test__get_text(model, text):
    sum_text = get_text(model, text)
    assert isinstance(sum_text, str)
